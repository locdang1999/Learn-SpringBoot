<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.danggialoc.learn.spring.security.model.PassworldModel"/>
    <fullyQualifiedTypeName name="com.danggialoc.learn.spring.security.entity.User"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
    <fullyQualifiedTypeName name="javax.persistence.Column"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="com.danggialoc.learn.spring.OauthAuthorizationServer.repositorys.UserRepository"/>
    <fullyQualifiedTypeName name="javax.transaction.Transactional"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="com.danggialoc.learn.spring.OauthAuthorizationServer.entity.User"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.User"/>
    <fullyQualifiedTypeName name="java.util.Collection"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.GrantedAuthority"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.authority.SimpleGrantedAuthority"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="com.danggialoc.learn.spring.OauthAuthorizationServer.service.CustomUserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetails"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.Authentication"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationProvider"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.BadCredentialsException"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.AuthenticationException"/>
    <fullyQualifiedTypeName name="com.danggialoc.learn.spring.OauthAuthorizationServer.service.CustomAuthenticationProvider"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.core.annotation.Order"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.SecurityFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.Customizer"/>
    <fullyQualifiedTypeName name="java.util.UUID"/>
    <fullyQualifiedTypeName name="java.security.interfaces.RSAPublicKey"/>
    <fullyQualifiedTypeName name="java.security.interfaces.RSAPrivateKey"/>
    <fullyQualifiedTypeName name="java.security.KeyPair"/>
    <fullyQualifiedTypeName name="java.security.KeyPairGenerator"/>
    <fullyQualifiedTypeName name="org.springframework.core.Ordered"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.OAuth2AuthorizationServerConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.server.authorization.client.RegisteredClientRepository"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.server.authorization.client.RegisteredClient"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.core.ClientAuthenticationMethod"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.core.AuthorizationGrantType"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.core.oidc.OidcScopes"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.server.authorization.config.ClientSettings"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.server.authorization.client.InMemoryRegisteredClientRepository"/>
    <fullyQualifiedTypeName name="com.nimbusds.jose.jwk.source.JWKSource"/>
    <fullyQualifiedTypeName name="com.nimbusds.jose.proc.SecurityContext"/>
    <fullyQualifiedTypeName name="com.nimbusds.jose.jwk.RSAKey"/>
    <fullyQualifiedTypeName name="com.nimbusds.jose.jwk.JWKSet"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.server.authorization.config.ProviderSettings"/>
</qualifiedTypeNameHistroy>
